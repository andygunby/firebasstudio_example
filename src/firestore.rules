rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Admins can read and write ANY document.
    // This rule is checked alongside more specific rules.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;

      // A user can read or update their own document.
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'submissions' collection
    match /submissions/{submissionId} {
      // Allow anonymous users to create submissions.
      allow create: if request.auth == null;
      
      // Allow authenticated users to create submissions for themselves.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Allow a user to read and update their own submissions.
      allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
